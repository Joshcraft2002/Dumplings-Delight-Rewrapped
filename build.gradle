plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version + "+fabric"
group = project.mod_group_id

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url = "https://www.cursemaven.com"
		allowInsecureProtocol = true
	}
	maven { url "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url 'https://repo.greenhouse.house/releases/' } //FD Refabricated
	maven { url 'https://repo.greenhouse.house/snapshots/' } //Temp Porting Lib 1.21 fork
	maven {	url "https://jitpack.io/" } // Fabric ASM

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

	mappings(loom.layered {
		it.officialMojangMappings {
			setNameSyntheticMembers(false)
		}
		it.parchment("org.parchmentmc.data:parchment-${project.parchment_version}")
	})

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	for (String module in port_lib_modules.split(",")) {
		modApi("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version")
	}

	// FD Refabricated
	modImplementation ("vectorwing:FarmersDelight:${project.fdrf_version}") {
		exclude(group: "net.fabricmc")
	}

	//for testing
	//modLocalRuntime("curse.maven:croptopia-415438:5571673")
	//modLocalRuntime("curse.maven:epherolib-885449:5439828")
	//modLocalRuntime("curse.maven:jei-238222:5623192")
}

processResources {
	var replaceProperties = [
			minecraft_version    : minecraft_version,
			minecraft_min_version: minecraft_min_version,
			minecraft_max_version: minecraft_max_version,

			mod_id               : mod_id,
			mod_name             : mod_name,
			mod_version          : version,
			mod_license          : mod_license,
			mod_authors          : mod_authors,
			mod_description      : mod_description,
			mod_credits          : mod_credits,
			mod_homepage         : mod_homepage,
			mod_issues		     : mod_issues,
			mod_github           : mod_github,
			port_lib_version     : port_lib_version
	]
	// setting them as input
	inputs.properties replaceProperties

	filesMatching("fabric.mod.json") {
		expand replaceProperties + [project: project]
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {

	}
}